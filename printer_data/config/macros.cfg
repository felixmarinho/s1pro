[gcode_macro SMARTHOME]
gcode:
    M27 ; Check if printing
    M105 ; Check temperature
    {% if printer.toolhead.homed_axes == "xyz" %}
    M117 Printer is already homed
    {% else %}
    M117 Printer needs homed...
    G28
    {% endif %}


[gcode_macro START_PRINT]
gcode:
    CLEAR_PAUSE
    SAVE_GCODE_STATE NAME=start_print_state
    G21 ; metric values
    G90 ; use absolute coordinates
    M83 ; extruder relative mode
	SMARTHOME # Home the printer
    M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) } ; wait for bed to heat up
    G1 Z20.0 F240 ; Move Z Axis 
    G1 X245 Y3 F6000 #brush nozzle
    G4 P10000  ; pause for 10 sec
    M109 S150 ; Wait for extruder to reach 150 for probing, nominal temp
	#BED_MESH_PROFILE LOAD=default
    BED_MESH_CALIBRATE ADAPTIVE=1
    G1 Z20.0 F240 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X245 Y3 F6000 ; brush nozzle
    #G4 P5000    ; pause for 5 sec
    # Reset the G-Code Z offset (adjust Z offset if needed)
    # SET_GCODE_OFFSET Z=0.0
    M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) } ; wait for extruder to heat up gcode temp
	G1 X226 Y10 
    G92 E0  
    G1 Z0.28 F240 
    G1 X226 Y140 E10 F1500 ; prime the nozzle
    G1 X225.7 Y140 F5000
    G92 E0
    G1 X225.7 Y10 E10 F1200 ; prime the nozzle
    G92 E0 ; Reset Extruder
    G1 E-1 F500 ;Retract
    G1 X216 Y10 F6000 ; wipe nozzle
    G92 E0 ; Reset Extruder
    RESOTRE_GCODE_STATE NAME=start_print_state


[gcode_macro END_PRINT]
gcode:
    SAVE_GCODE_STATE NAME=end_print_state
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 E-3 F300
    G1 X10 Y10 F6000    
    G1 Z10 F800 # Raise nozzle by 10mm
    G90 ; Absolute Position
    G1 X0 Y225 F4000 ; Move away from the print
    M84 # Disable steppers
    CLEAR_PAUSE
    RESOTRE_GCODE_STATE NAME=end_print_state
    

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    {% set x = params.X|default(10)|float %}
    {% set y = params.Y|default(10)|float %}
    {% set e = params.Y|default(-3)|float %}
    
    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

     
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                             ; relative positioning
            G1 E{e} F300
            G1 X{x} Y{y} F6000
            G1 Z{z} F900      
            ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}


[gcode_macro M600]
gcode:
    {% set X = params.X|default(244)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(0)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-2 F600   
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-2 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro P_M25]
gcode:
    {% set X = params.X|default(244)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(0)|float %}
    SAVE_GCODE_STATE NAME=M25_state
    PAUSE
    G91
    G1 E-2 F600   
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-2 F1000
    RESTORE_GCODE_STATE NAME=M25_state

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(1)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
       
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
        M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        G1 E40 F300
        G4 P2000
                     
        {% endif %}
 
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
       {% else %}
           G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
       {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}


[gcode_macro RESUME_SMALLPURGE]
gcode:
    # Parameters
    {% set e = params.E|default(1)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
       
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
        M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        G1 E10 F300
        G4 P2000
                     
        {% endif %}
 
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
       {% else %}
           G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
       {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}



[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    END_PRINT
    BASE_CANCEL_PRINT


[gcode_macro TUNE_PRESSURE_ADV]
description: Tune Pressure Advance
gcode:
  # saved_variables.cfg
  {% set speed = 9000 %}
  {% set nozzle_temp = 200 %}
  {% set bed_temp = 65 %}
  {% set nozzle_diameter = 0.4 %}

  # macro parameters
  {% set BED = params.BED|default(bed_temp)|float %}
  {% set NOZZLE = params.NOZZLE|default(nozzle_temp)|float %}
  {% set PA_START = params.PA_START|default(0.0)|float %}
  {% set PA_STOP = params.PA_STOP|default(0.1)|float %}
  {% set NZL = params.NZL|default(nozzle_diameter)|float %}

  # calculated variables
  {% set PA_STEP = (PA_STOP - PA_START) / 20 |float %}
  {% set E20 = (0.1147475 * NZL) * 20|float %}
  {% set E40 = (0.1147475 * NZL) * 40|float %}
  {% set X_MID = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set Y_MID = printer.toolhead.axis_maximum.y|float / 2.0 %}

  # delta printer so we override center to be (0,0)
  {% set X_MID = 0.0|float %}
  {% set Y_MID = 0.0|float %}

  START_PRINT BED_TEMP={BED} EXTRUDER_TEMP={NOZZLE}

  G21 ; millimeter units
  G90 ; absolute XYZ
  M83 ; relative E
  SET_VELOCITY_LIMIT ACCEL=3000
  G92 E0
  M106 S0

  G1 X{(X_MID-40)} Y{(Y_MID-50)} F{speed}        ; move to start position
  G1 Z0.25 F300                                  ; move to layer height
  G1 E0.75 F1800                                 ; un-retract
  G1 X{(X_MID-20)} Y{(Y_MID-50)} E{E20} F300     ; print line part one
  G1 X{(X_MID+20)} Y{(Y_MID-50)} E{E40} F3000    ; print line part two
  G1 X{(X_MID+40)} Y{(Y_MID-50)} E{E20} F300     ; print line part three
  G1 E-0.75 F1800                                ; retract
  G1 Z1 F300                                     ; move above layer height

  {% for i in range(0, 21) %}
      SET_PRESSURE_ADVANCE ADVANCE={PA_START + (i * PA_STEP)} ; set Pressure Advance
      M117 PA={PA_START + (i * PA_STEP)}, STEP={PA_STEP}.
      G1 X{(X_MID-40)} Y{(Y_MID-45)+(5*i)} F30000           ; move to start position
      G1 Z0.25 F300                                         ; move to layer height
      G1 E0.75 F1800                                        ; un-retract
      G1 X{(X_MID-20)} Y{(Y_MID-45)+(5*i)} E{E20} F300      ; print line part one
      G1 X{(X_MID+20)} Y{(Y_MID-45)+(5*i)} E{E40} F3000     ; print line part two
      G1 X{(X_MID+40)} Y{(Y_MID-45)+(5*i)} E{E20} F300      ; print line part three
      G1 E-0.75 F1800                                       ; retract
      G1 Z1 F300                                            ; move above layer height
  {% endfor %}

  END_PRINT

  # these may not work, in which case you will need to count and do the math yourself!
  M117 New PA = ({PA_START} + (bestLine * {PA_STEP}) )
  #{action_respond_info ("Find best line and multiply it by (" + PA_START|string + " + (bestLine * " + PA_STEP|string + ") ) to find your PA setting.")}


[gcode_macro SET_PRESSURE_ADVANCE]
variable_current_extruder: "extruder"
rename_existing: BASE_SET_PRESSURE_ADVANCE
gcode:
  {% set advance = params.ADVANCE|default(-1)|float %}
  {% set smooth_time = params.SMOOTH_TIME|default(-1)|float %}

  M117 "Override SET_PRESSURE_ADVANCE"

  {% if advance > 0.0 %}
    M118 "Setting ADVANCE"
    BASE_SET_PRESSURE_ADVANCE ADVANCE={advance} EXTRUDER={current_extruder}
  {% endif %}

  {% if smooth_time > 0.0 %}
    M117 "Setting SMOOTH_TIME"
    BASE_SET_PRESSURE_ADVANCE SMOOTH_TIME={smooth_time} EXTRUDER={current_extruder}
  {% endif %}


[gcode_macro _km_idle_timeout]
gcode:
  {% if printer.pause_resume.is_paused %}
    {action_respond_info("Extruder powered down on idle timeout.")}
    SET_GCODE_VARIABLE MACRO=resume VARIABLE=saved_extruder_temp VALUE="{
      printer[printer.toolhead.extruder].target}"
    M104; Turn off extruder but leave the bed on.
  {% else %}
    TURN_OFF_HEATERS
    M107; turn off fan
    M84
    _KM_PRINT_STATUS ACTION=CHANGE STATUS=ready
  {% endif %}

  

[exclude_object]  # Enable object exclusion


[gcode_macro SCREWS_ADJ]
gcode:
    SMARTHOME
    SCREWS_TILT_CALCULATE


[gcode_macro HEAT_PLA]
gcode:
  M104 S200 ; nozzle temp 
  M140 S65 ; bed temp


[gcode_macro HEAT_PETG]
gcode:
  M104 S235 ; nozzle temp 
  M140 S75 ; bed temp

[gcode_macro HEAT_TPU]
gcode:
  M104 S235 ; nozzle temp 
  M140 S0 ; bed temp

[gcode_macro HEAT_ASA]
gcode:
  M104 S240 ; nozzle temp 
  M140 S100 ; bed temp

[gcode_macro HEAT_FC]
gcode:
    G90 ; use absolute coordinates
    M83 ; extruder relative mode
    SMARTHOME # Home the printer if not done
    G1 Z20.0 F240 ; Move Z Axis
    G1 X245 Y3 F6000 #brush nozzle
    M104 S150 ; nozzle temp 
    G4 P600000
    TURN_OFF_HEATERS
    M84 XY


[gcode_macro BED_MESH]
gcode:
  M140 S65 ; bed temp
  M190 S65 ; wait bed temp stablize
  SMARTHOME
  BED_MESH_CALIBRATE
  TURN_OFF_HEATERS


[gcode_macro COOLDOWN]
gcode:
  TURN_OFF_HEATERS


[gcode_macro RESUME_PURGE]
gcode:
    RESUME


